e2=eigen(0.5*I2)
ev2=e2$values
ev2
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8.R")
draw_a_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8.R")
draw_a_tree <- function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8) # lwd sets the line thickness
}
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8.R")
draw_a_small_tree()
draw_a_tree()
draw_a_small_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8.R")
draw_a_small_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8.R")
draw_a_tree()
draw_a_small_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8_9_10.R")
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8, xlim=c(-2,2), ylim=c(-2,2))   # lwd sets the line thickness
draw_a_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_8_9_10.R")
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8) # lwd sets the line thickness
draw_a_tree <- function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8) # lwd sets the line thickness
}
draw_a_tree()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
draw_a_tree <- function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8, xlim=c(-2,2), ylim=c(-2,2)) # lwd sets the line thickness
}
draw_a_tree()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
draw_a_transformed_tree(A)
draw_a_transformed_tree(A)
source("~/.active-rstudio-document")
draw_a_transformed_tree(A)
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
draw_a_transformed_tree(B)
draw_a_transformed_tree(B)
rm(list=ls())
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
draw_aa_tree()
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
draw_a_transformed_tree(B)
source("~/Documents/GitHub/BIOS13/Linear Algebra/Ex2_13_14.R")
draw_a_transformed_tree(C)
e=eigen(C)
View(e)
#16
D= matrix(c(-1,0,0,1),2,2)
D
draw_a_transformed_tree(D)
draw_a_tree()
draw_a_tree()
draw_a_tree()
draw_a_tree()
draw_a_transformed_tree(D)
draw_a_tree()
source("~/.active-rstudio-document")
draw_a_tree()
source("~/.active-rstudio-document")
draw_a_tree()
draw_a_transformed_tree(D)
source("~/.active-rstudio-document")
draw_a_tree()
draw_a_transformed_tree(D)
source("~/.active-rstudio-document")
draw_a_tree()
source("~/.active-rstudio-document")
draw_a_tree()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
setwd("~/Documents/GitHub/BIOS13/Model Fitting")
setwd("~/Documents/GitHub/BIOS13/Model Fitting")
ringlets = read.csv('Ringlets.csv')
head(ringlets)
plot(Ringlets, type=’b’)
plot(Ringlets, type='b')
plot(ringlets, type='b')
plot(ringlets$year,log(ringlets$N, type='b')
plot(ringlets$year~log(ringlets$N, type='b')
plot(ringlets$year~log(ringlets$N, type='b')
plot(ringlets$yearlog(ringlets$N), type='b')
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plot(ringlets$yearlog(ringlets$N), type='b')
plot(ringlets$year~log(ringlets$N), type='b')
plot(log(ringlets$N)~ringlets$year, type='b')
plot(ringlete, type='b')
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
ringlets
Nt=ringlets$N[1:23]
Ntplus1=ringlets$N[2:24]
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
Rickerfit <- nls( Ntplus1 ~ Nt*exp(r0*(1-Nt/K)), data=list(Nt=Nt),
start=list(r0=1,K=100) )
summary(Rickerfit)
points(Nt, fitted(Rickerfit), col='red')
plot(Nt, residuals(Rickerfit))
points(Nt, fitted(Rickerfit), col='red')
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
points(Nt, fitted(Rickerfit), col='red')
fitted(Ricketfit)
fitted(Rickerfit)
Nt
plot(Nt, residuals(Rickerfit))
rt <- log(Ntplus1/Nt)
plot(Nt,rt)
residuals(Rickerfit)
Nt
newNt=ringlets$N[1,3:23]
Ringlets = ringlets[-2,]
Ringlets
Ringlets = ringlets[-1,]
Ringlets
Nt_new=Ringlets[1:22]
Nt_new=Ringlets[1:22]
Nt_new=Ringlets$N[1:22]
Ntplus1_new=ringlets$N[2:23]
rt_fit <- nls( rt ~ r0*(1-Nt/K), data=list(Nt=Nt_new), start=list(r0=1,K=100) )
Nt_new=Ringlets$N[1:22]
rt_fit <- nls( rt ~ r0*(1-Nt/K), data=list(Nt=Nt_new), start=list(r0=1,K=100) )
rt_fit <- nls( rt ~ r0*(1-Nt/K), data=list(Nt=Nt_new), start=list(r0=1,K=100))
Nt=ringlets$N[2:23]
Ntplus1=ringlets$N[3:24]
rt_fit <- nls(rt ~ r0*(1-Nt/K), data=list(Nt=Nt), start=list(r0=1,K=100))
rt_fit <- nls( rt ~ r0*(1-Nt/K), data=list(Nt=Nt), start=list(r0=1,K=100) )
Rickerfit <- nls( Ntplus1 ~ Nt*exp(r0*(1-Nt/K)), data=list(Nt=Nt),
start=list(r0=1,K=100) )
rt <- log(Ntplus1/Nt)
rt_fit <- nls( rt ~ r0*(1-Nt/K), data=list(Nt=Nt), start=list(r0=1,K=100) )
summary(rt_fit)
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
points(Nt, fitted(rt_fit), col='red')
points(Nt, (rt_fit), col='red')
points(Nt, rt_fit, col='red')
points(Nt, fitted(rt_fit), col='blue')
fitted(rt_fit)
plot(Nt, fitted(rt_fit),type='b', col='blue')
plot(Nt, residuals(Rickerfit))
points(Nt, fitted(rt_fit), col='blue')
plot(Nt,rt)
points(Nt, fitted(rt_fit), col='blue')
plot(Nt, residuals(Rickerfit))
points(Nt, fitted(rt_fit), col='blue') #plot over plot(Nt,rt)
plot(Nt, Ntplus1, xlab='N(t)', ylab='N(t+1)')
Rickerfit <- nls( Ntplus1 ~ Nt*exp(r0*(1-Nt/K)), data=list(Nt=Nt),
start=list(r0=1,K=100) )
points(Nt, fitted(Rickerfit), col='red') # fitted extracts fitted values from objects returned by modeling functions
plot(Nt, residuals(Rickerfit))
sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2))
points(Nt, fitted(rt_fit), col='blue') #plot over plot(Nt,rt)
plot(Nt,rt)
points(Nt, fitted(rt_fit), col='blue') #plot over plot(Nt,rt)
# o^ = 0.3445
sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2)) # 0.3445
# o^ = 0.3445
o_hat=sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2)) # 0.3445
summary(rt_fit)
residuals(rt_fit)^2
length(rt)
sum(residuals(rt_fit)^2)
summary(rt_fit)
rt
Nt
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
a=5
append(a,4)
a[1]
a[2]
a=append(a,4)
a[2]
o_hat=sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2)) # 0.3445
newNtplus1=5
r_hat=1.004
K_hat=311
for (i in 1:length(Nt)) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat))
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
Ntplus1
newNtplus1
Nt
plot(Nt,newNtplus1)
fullNt=ringlets$N[2:24]
plot(fullNt,newNtplus1)
set.seed(1)
o_hat=sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2)) # 0.3445
newNtplus1=5
r_hat=1.004
K_hat=311
#Predict the Nt+1 by using initial Nt as 5
for (i in 1:length(Nt)) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat))
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
fullNt=ringlets$N[2:24]
newNtplus1
par(mfrow=c(1,2))
fullNt=ringlets$N[2:24]
par(mfrow=c(1,2))
plot(fullNt,newNtplus1)
# par(mfrow=c(1,2))
# plot(ringlets, type='b')
# plot(log(ringlets$N)~ringlets$year, type='b') #Take the log to scale big number down and small number up, to have a general look
Ringlets=ringlets[-1,]
plot(Ringlets)
plot(newNtplus1,seq(1,23,by=1))
plot(newNtplus1~seq(1,23,by=1))
plot(newNtplus1~seq(1,23,by=1))
plot(Ringlets)
par(mfrow=c(1,2))
plot(newNtplus1~seq(1,23,by=1))
plot(Ringlets)
abline(lm(Ringlets))
abline(lm(Ringlets))
plot(Ringlets)
abline(lm(Ringlets))
abline(lm(Ringlets))
abline(lm(Ringlets$year~Ringlets$N))
Hasselfit = nls(rt ~ log(lamda/(1+a*Nt)^b), data=list(Nt=Nt), start=list(lamda=1.1,a=0.001,b=1))
summary(Hasselfit)
plot(Nt,rt,xlab="Nt",ylab='rt')
points(Nt, fitted(rt_fit),col='red')
points(Nt, fitted(rt_fit), col='blue') #plot over plot(Nt,rt)
points(Nt, fitted(rt),col='red')
points(Nt, fitted(rt),col='red')
points(Nt, fitted(Hasselfit),col='red')
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
Hasselfit = nls(rt ~ log(lamda/(1+a*Nt)^b), data=list(Nt=Nt), start=list(lamda=1.1,a=0.001,b=1))
summary(Hasselfit)
plot(Nt,rt,xlab="Nt",ylab='rt')
points(Nt, fitted(Hasselfit),col='red')
plot(Nt,rt,xlab="Nt",ylab='rt')
points(Nt, fitted(Hasselfit),col='red')
points(Nt, fitted(rt_fit), col='blue') #plot over plot(Nt,rt)
plotting = function(tmax){
plot(NA, type='n', xlim=c(0,20),ylim=c(0,800))
for (iter in 1:tmax) { #repeat tmax times
for (i in 1:100) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,20,by=1))
new_Ntplus1=5
}
}
plotting(20)
plotting = function(tmax){
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:tmax) { #repeat tmax times
for (i in 1:100) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,21,by=1))
new_Ntplus1=5
}
}
plotting(20)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20)
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
for (i in 1:100) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,21,by=1))
new_Ntplus1=5
}
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,21,by=1))
new_Ntplus1=5
}
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,21,by=1))
new_Ntplus1=5
}
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,21,by=1))
new_Ntplus1=NULL
new_Ntplus1=append(new_Ntplus1,5)
}
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,20,by=1))
new_Ntplus1=NULL
new_Ntplus1=append(new_Ntplus1,5)
}
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
new_Ntplus1=NULL
new_Ntplus1=append(new_Ntplus1,5)
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,20,by=1))
}
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plot(NA, type='n', xlim=c(0,21),ylim=c(0,800))
for (iter in 1:10) { #repeat tmax times
new_Ntplus1=NULL
new_Ntplus1=append(new_Ntplus1,5)
for (i in 1:19) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,20,by=1))
}
source("~/Documents/GitHub/BIOS13/untitled folder/randomWalk.R")
randomWalk(10,5)
randomWalk = function(N,tmax) {
new_Ntplus1 = rep(5,N) #create a vector that has the length of the walk and start all the walk with 0
plot(NA, type='n', xlim=c(0,N),ylim=c(0,500)) #Create a blank plot to plot in
for (iter in 1:tmax) { #repeat tmax times
for (i in 1:(N-1)) {
new_Ntplus1[i+1] = new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #The next value of i is added with the previous one and rnorm
}
points(1:N,new_Ntplus1[i],col='black')
}
}
randomWalk(20,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
randomWalk(10,5)
rm(list=ls())
# o^ = 0.3445
# In the summary(rt_fit), the residual standard error said: 0.3445 on 20 degrees of freedom
o_hat=sqrt(sum(residuals(rt_fit)^2)/(length(rt)-2)) # 0.3445
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
randomWalk(10,5)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
randomWalk(4,3)
summary(Rickerfit)
summary(rt_fit)
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
newNtplus1=NULL
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
newNtplus1=5
for (i in 1:100) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
newNtplus1=5
for (i in 1:99) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20,1)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20,1)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20,1)
plotting(20,1)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20,1)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
plotting(20,1)
for (i in 1:99) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
newNtplus1=5
for (i in 1:99) {
new_value=newNtplus1[i]*exp(r_hat*(1-newNtplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
newNtplus1=append(newNtplus1,new_value)
new_value=0
}
for (iter in 1:5) {
new_Ntplus1=5
for (i in 1:(19)) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,year,by=1))
}
for (iter in 1:5) {
new_Ntplus1=5
plot(NA, type='n', xlim=c(0,20),ylim=c(0,1000))
for (i in 1:(19)) {
new_value=new_Ntplus1[i]*exp(r_hat*(1-new_Ntplus1[i]/K_hat)+rnorm(1,0,o_hat)) #rnorm(1,0,o_hat) give 1 value, mean = 0 and sd=o_hat
new_Ntplus1=append(new_Ntplus1,new_value)
new_value=0
}
points(new_Ntplus1,seq(1,20,by=1))
}
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(20,5)
rt_fit_ricket_plot(20,100)
newNtplus1
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(100,10)
rt_fit_ricket_plot(40,10)
rt_fit_ricket_plot(40,10)
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(40,10)
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(40,10)
rt_fit_ricket_plot(40,10)
source("~/Documents/GitHub/BIOS13/Model Fitting/modelfitting.R")
rt_fit_ricket_plot(20,3)
